  <p>
    <%= f.label :inventory_group_id %><br />
    <%= f.select :inventory_group_id, inventory_groups_options_array %>
  </p>
  <p>
    <%= f.label :name %><br />
    <%= f.text_field :name %>
  </p>

	<div id="medicines" style="display:none;">
      <p>
		      <%= f.label :pharmacy_dosage_list_id, "Frequency" %><br />
    			 <%= f.collection_select :pharmacy_dosage_list_id, PharmacyDosageList.pharamacy_dosage_lists, :id ,:dosage_type_name, options ={:prompt => "-Select dosage type"}%>
 			 </p>
 			<p> 
 			  <%= f.label :pharmacy_course_list_id, "Route" %><br />
 			<%= f.collection_select :pharmacy_course_list_id, PharmacyCourseList.pharamacy_course_lists ,:id ,:course_type_name ,options = { :prompt =>"-Select course type" }%>
 			</p> 
 			<p>  <%= f.label :quantity %><br />
    			<%= f.text_field :quantity %></p>
 			<p> <%= f.label :course_duration %><br />
    	<%= f.text_field :course_duration %> </p>
<p> <%= f.label :other_remarks %><br />
    	<%= f.text_area :other_remarks, :cols => 35, :rows => 3 %> </p>    	
	</div>

  <% disable_unit_of_measurement = {} -%>
  <% disable_unit_of_measurement = {:disabled => 'disabled'} unless @inventory_item.new_record? -%>
  <p>
    <%= f.label :inventory_unit_of_measurement_id %><br />
    <%= f.select :inventory_unit_of_measurement_id, inventory_unit_of_measurements_options_array, {:include_blank => true}, {:onchange => 'set_price_labels(this)'}.merge(disable_unit_of_measurement) %>
  </p>
  <p>
    <%= f.label :unit_buy_price, 'Buy price per unit', :id => 'unit_buy_price_label_id' %><br />
    <%= f.text_field :unit_buy_price %>
  </p>
  <p>
    <%= f.label :unit_sale_price, 'Sale price per unit', :id => 'unit_sale_price_label_id' %><br />
    <%= f.text_field :unit_sale_price %>
  </p>
  <p>
    <%= f.label :sub_unit_sale_price, 'Sale price per sub unit' ,:id => 'sub_unit_sale_price_label_id' %><br />
    <%= f.text_field :sub_unit_sale_price %>
  </p>

  <p>
    <%= f.label :consumable %><br />
    <%= f.check_box :consumable %>
  </p>
  <p>
    <%= f.label :discount_allowed %><br />
    <%= f.check_box :discount_allowed %>
  </p>
  <p>
    <%= f.label :opening_quantity, 'Opening stock quantity' %><br />
    <%= f.text_field :opening_quantity %>
  </p>
  <p>
    <%= f.label :shelf_no %><br />
    <%= f.text_field :shelf_no %>
  </p>
  <p>
    <%= f.label :account_id, 'Associated with account' %><br />
    <%= f.select :account_id, user_default_branch.accounts.map{|m| [m.name, m.id]} %>
  </p>
<script>

var unit_hash = <%= user_default_branch.inventory_unit_of_measurements.all.map{|m| [m.id,m.unit_name,m.sub_unit_name]}.to_json -%>

function set_price_labels(obj) {
  var selected_unit_id = $(obj).attr('value');
  if (selected_unit_id == '') {
    $('#unit_buy_price_label_id').html('Buy price per unit');
    $('#unit_sale_price_label_id').html('Sale price per unit');
    $('#sub_unit_sale_price_label_id').html('Sale price per sub unit');
  } else {
    $('#unit_buy_price_label_id').html('Buy price per ' + get_unit_name(selected_unit_id));
    $('#unit_sale_price_label_id').html('Sale price per ' + get_unit_name(selected_unit_id));
    $('#sub_unit_sale_price_label_id').html('Sale price per ' + get_sub_unit_name(selected_unit_id));
  }
}

function get_unit_name(unit_id) {
  for(var i=0;i<unit_hash.length;i++) {
    if(unit_hash[i][0] == unit_id)
      return unit_hash[i][1];
  }
}

function get_sub_unit_name(unit_id) {
  for(var i=0;i<unit_hash.length;i++) {
    if(unit_hash[i][0] == unit_id)
      return unit_hash[i][2];
  }
}

function show_medicines_details() {
 	if($('#inventory_item_inventory_group_id').val() == "1")
  {  $('#medicines').show(); $('#medicines').effect('highlight', {}, 2000); }
 	else
	{  $('#medicines').hide();  }
	   
}

$(function($){
  show_medicines_details();
	$('#inventory_item_inventory_group_id').change(function() {
		show_medicines_details();
	});
});
</script>
